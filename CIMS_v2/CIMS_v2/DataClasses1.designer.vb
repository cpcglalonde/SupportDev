'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Awesome")>  _
Partial Public Class DataSQL
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CIMS_v2.My.MySettings.Default.AwesomeConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OwnerOrgID As Integer
	
	Private _UserID As String
	
	Private _Password As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _Title As String
	
	Private _email As String
	
	Private _Phone As String
	
	Private _ext As String
	
	Private _Active As Boolean
	
	Private _Notes As String
	
	Private _SecurityLevel As Short
	
	Private _ScopeLevel As Short
	
	Private _CashBoxNo As System.Nullable(Of Integer)
	
	Private _RidingNo As String
	
	Private _RidingNoMPBoundaries As String
	
	Private _PreferredLanguageID As System.Nullable(Of Integer)
	
	Private _ExportToFilePermitted As System.Nullable(Of Boolean)
	
	Private _UseMPBoundaries As System.Nullable(Of Boolean)
	
	Private _LastModified As System.Nullable(Of Date)
	
	Private _Created As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOwnerOrgIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOwnerOrgIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnextChanging(value As String)
    End Sub
    Partial Private Sub OnextChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnNotesChanging(value As String)
    End Sub
    Partial Private Sub OnNotesChanged()
    End Sub
    Partial Private Sub OnSecurityLevelChanging(value As Short)
    End Sub
    Partial Private Sub OnSecurityLevelChanged()
    End Sub
    Partial Private Sub OnScopeLevelChanging(value As Short)
    End Sub
    Partial Private Sub OnScopeLevelChanged()
    End Sub
    Partial Private Sub OnCashBoxNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCashBoxNoChanged()
    End Sub
    Partial Private Sub OnRidingNoChanging(value As String)
    End Sub
    Partial Private Sub OnRidingNoChanged()
    End Sub
    Partial Private Sub OnRidingNoMPBoundariesChanging(value As String)
    End Sub
    Partial Private Sub OnRidingNoMPBoundariesChanged()
    End Sub
    Partial Private Sub OnPreferredLanguageIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPreferredLanguageIDChanged()
    End Sub
    Partial Private Sub OnExportToFilePermittedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExportToFilePermittedChanged()
    End Sub
    Partial Private Sub OnUseMPBoundariesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUseMPBoundariesChanged()
    End Sub
    Partial Private Sub OnLastModifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedChanged()
    End Sub
    Partial Private Sub OnCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OwnerOrgID", DbType:="Int NOT NULL")>  _
	Public Property OwnerOrgID() As Integer
		Get
			Return Me._OwnerOrgID
		End Get
		Set
			If ((Me._OwnerOrgID = value)  _
						= false) Then
				Me.OnOwnerOrgIDChanging(value)
				Me.SendPropertyChanging
				Me._OwnerOrgID = value
				Me.SendPropertyChanged("OwnerOrgID")
				Me.OnOwnerOrgIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="VarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(20)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(50)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="VarChar(50)")>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(30)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="VarChar(50)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="VarChar(30)")>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me.OnPhoneChanging(value)
				Me.SendPropertyChanging
				Me._Phone = value
				Me.SendPropertyChanged("Phone")
				Me.OnPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ext", DbType:="VarChar(50)")>  _
	Public Property ext() As String
		Get
			Return Me._ext
		End Get
		Set
			If (String.Equals(Me._ext, value) = false) Then
				Me.OnextChanging(value)
				Me.SendPropertyChanging
				Me._ext = value
				Me.SendPropertyChanged("ext")
				Me.OnextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit NOT NULL")>  _
	Public Property Active() As Boolean
		Get
			Return Me._Active
		End Get
		Set
			If ((Me._Active = value)  _
						= false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Notes", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Notes() As String
		Get
			Return Me._Notes
		End Get
		Set
			If (String.Equals(Me._Notes, value) = false) Then
				Me.OnNotesChanging(value)
				Me.SendPropertyChanging
				Me._Notes = value
				Me.SendPropertyChanged("Notes")
				Me.OnNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SecurityLevel", DbType:="SmallInt NOT NULL")>  _
	Public Property SecurityLevel() As Short
		Get
			Return Me._SecurityLevel
		End Get
		Set
			If ((Me._SecurityLevel = value)  _
						= false) Then
				Me.OnSecurityLevelChanging(value)
				Me.SendPropertyChanging
				Me._SecurityLevel = value
				Me.SendPropertyChanged("SecurityLevel")
				Me.OnSecurityLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScopeLevel", DbType:="SmallInt NOT NULL")>  _
	Public Property ScopeLevel() As Short
		Get
			Return Me._ScopeLevel
		End Get
		Set
			If ((Me._ScopeLevel = value)  _
						= false) Then
				Me.OnScopeLevelChanging(value)
				Me.SendPropertyChanging
				Me._ScopeLevel = value
				Me.SendPropertyChanged("ScopeLevel")
				Me.OnScopeLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CashBoxNo", DbType:="Int")>  _
	Public Property CashBoxNo() As System.Nullable(Of Integer)
		Get
			Return Me._CashBoxNo
		End Get
		Set
			If (Me._CashBoxNo.Equals(value) = false) Then
				Me.OnCashBoxNoChanging(value)
				Me.SendPropertyChanging
				Me._CashBoxNo = value
				Me.SendPropertyChanged("CashBoxNo")
				Me.OnCashBoxNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RidingNo", DbType:="Char(5)")>  _
	Public Property RidingNo() As String
		Get
			Return Me._RidingNo
		End Get
		Set
			If (String.Equals(Me._RidingNo, value) = false) Then
				Me.OnRidingNoChanging(value)
				Me.SendPropertyChanging
				Me._RidingNo = value
				Me.SendPropertyChanged("RidingNo")
				Me.OnRidingNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RidingNoMPBoundaries", DbType:="Char(5)")>  _
	Public Property RidingNoMPBoundaries() As String
		Get
			Return Me._RidingNoMPBoundaries
		End Get
		Set
			If (String.Equals(Me._RidingNoMPBoundaries, value) = false) Then
				Me.OnRidingNoMPBoundariesChanging(value)
				Me.SendPropertyChanging
				Me._RidingNoMPBoundaries = value
				Me.SendPropertyChanged("RidingNoMPBoundaries")
				Me.OnRidingNoMPBoundariesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreferredLanguageID", DbType:="Int")>  _
	Public Property PreferredLanguageID() As System.Nullable(Of Integer)
		Get
			Return Me._PreferredLanguageID
		End Get
		Set
			If (Me._PreferredLanguageID.Equals(value) = false) Then
				Me.OnPreferredLanguageIDChanging(value)
				Me.SendPropertyChanging
				Me._PreferredLanguageID = value
				Me.SendPropertyChanged("PreferredLanguageID")
				Me.OnPreferredLanguageIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExportToFilePermitted", DbType:="Bit")>  _
	Public Property ExportToFilePermitted() As System.Nullable(Of Boolean)
		Get
			Return Me._ExportToFilePermitted
		End Get
		Set
			If (Me._ExportToFilePermitted.Equals(value) = false) Then
				Me.OnExportToFilePermittedChanging(value)
				Me.SendPropertyChanging
				Me._ExportToFilePermitted = value
				Me.SendPropertyChanged("ExportToFilePermitted")
				Me.OnExportToFilePermittedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseMPBoundaries", DbType:="Bit")>  _
	Public Property UseMPBoundaries() As System.Nullable(Of Boolean)
		Get
			Return Me._UseMPBoundaries
		End Get
		Set
			If (Me._UseMPBoundaries.Equals(value) = false) Then
				Me.OnUseMPBoundariesChanging(value)
				Me.SendPropertyChanging
				Me._UseMPBoundaries = value
				Me.SendPropertyChanged("UseMPBoundaries")
				Me.OnUseMPBoundariesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModified", DbType:="SmallDateTime")>  _
	Public Property LastModified() As System.Nullable(Of Date)
		Get
			Return Me._LastModified
		End Get
		Set
			If (Me._LastModified.Equals(value) = false) Then
				Me.OnLastModifiedChanging(value)
				Me.SendPropertyChanging
				Me._LastModified = value
				Me.SendPropertyChanged("LastModified")
				Me.OnLastModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created", DbType:="SmallDateTime")>  _
	Public Property Created() As System.Nullable(Of Date)
		Get
			Return Me._Created
		End Get
		Set
			If (Me._Created.Equals(value) = false) Then
				Me.OnCreatedChanging(value)
				Me.SendPropertyChanging
				Me._Created = value
				Me.SendPropertyChanged("Created")
				Me.OnCreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
